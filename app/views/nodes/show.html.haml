%h1= @node.scientific_name&.italicized&.html_safe || @node.title
%ul
  %li
    %strong= t('nodes.fields.resource')
    = link_to(@node.resource.name, @node.resource)
  %li
    %strong= t('nodes.fields.resource_pk')
    = @node.resource_pk
  %li
    %strong= t('nodes.fields.page_id')
    - base = Rails.application.secrets.host[:url] || 'http://eol.org'
    = link_to(@node.page_id, "#{base}/pages/#{@node.page_id}")
  %li
    %strong= t('nodes.fields.matching_log')
    - if @node.matching_log
      = @node.matching_log.html_safe
    - else
      = "[Empty. Was this harvested prior to Mar 9 2018?]"
  %li
    %strong= t('nodes.fields.ancestors')
    = @node.node_ancestors.map { |na| link_to(na.ancestor.name, na.ancestor) + " <sub>#{na.ancestor.landmark}</sub>".html_safe }.join(' &rarr; ').html_safe
  %li
    - if pk = @node.parent_resource_pk
      - if @node.parent
        %strong= t('nodes.fields.parent')
        = link_to(@node.parent.title, @node.parent)
      - else
        %strong= t('nodes.fields.parent_missing', pk: pk)
    - else
      %strong= t('nodes.fields.parent_nil')
  %li
    %strong= t('nodes.fields.rank')
    - if @node.rank.blank?
      - if @node.rank_verbatim.blank? # Expected to be blank:
        = "''"
      - else # NOT expected:
        (The field is blank. Was it harvested prior to Mar 20 2018?)
    - else
      = @node.rank
  %li
    %strong= t('nodes.fields.rank_verbatim')
    = "'#{@node.rank_verbatim}'"
  %li
    %strong= t('nodes.fields.landmark')
    - if @node.no_landmark?
      (No landmark.)
    - else
      = @node.landmark
  %li
    %strong= t('nodes.fields.in_unmapped_area')
    = @node.in_unmapped_area? ? t('boolean.true') : t('boolean.false')
  %li
    %strong= t('nodes.fields.created')
    = l(@node.created_at, format: :short)
    - if @node.harvest
      = t(:node_created_by_harvest, date: link_to(l(@node.harvest.created_at, format: :short), @node.harvest)).html_safe
    - else
      (Whoa, there is no harvest associated with this node. Something is seriously wrong with it.)
%h2= t('nodes.fields.scientific_names')
.ui.cards
  - if !@node.scientific_names.any?
    %li
      %strong= t(:node_name_not_parsed_notice)
  - else
    - @node.scientific_names.each do |name|
      - preferred = @node.scientific_name && @node.scientific_name == name
      .ui.card{ class: "#{'red' if preferred}" }
        .content
          .header= name.verbatim
          - if preferred && @node.scientific_names.size > 1
            .meta
              = t('nodes.fields.preferred_name')
          .ui.list
            .item
              .header= t('nodes.fields.italicized')
              = name&.italicized&.html_safe
            .item
              .header= t('nodes.fields.normalized')
              = name&.normalized
            .item
              .header= t('nodes.fields.canonical')
              = @node&.canonical
            .item
              .header= t('nodes.fields.authors')
              - if name.authors
                = name.authors.join('; ')
              - else
                = t('nodes.empty_fields.authors')
            .item
              .header= t('nodes.fields.year')
              = name.year
            .item
              .header= t('nodes.fields.name_parse_quality')
              = name.parse_quality
            .item
              .header= t('nodes.fields.name_taxonomic_status_verbatim')
              = name.taxonomic_status_verbatim
            .item
              .header= t('nodes.fields.name_taxonomic_status')
              = name.taxonomic_status
%h2= t('nodes.fields.vernaculars')
- if @node.vernaculars.published.empty?
  %strong= t(:node_vernaculars_empty_notice)
- else
  = t('nodes.fields.vernaculars')
  %ul
    - @node.vernaculars.published.each do |vern|
      %li
        = vern.verbatim
        = "(#{vern.language_code_verbatim} &rarr; #{vern.language.code})".html_safe
%h2= t('nodes.headers.children')
- if @node.children.published.empty?
  = t('nodes.empty_fields.children')
- else
  %ul
    - @node.children.published.each do |child|
      %li= link_to(child.title, child)

%h2= t('nodes.headers.media')
- if @node.media.published.empty?
  = t('nodes.empty_fields.media')
- else
  %ul
    - @node.media.published.each do |medium|
      %li
        = link_to(medium.name_verbatim || truncate(medium.description_verbatim, length: 20), medium)
        = "(#{medium.format})"

%h2= t('nodes.headers.traits')
- if @node.traits.published.empty?
  = t('nodes.empty_fields.traits')
- else
  .ui.list
    - @node.traits.published.each do |trait|
      .item
        = trait.predicate_term.name
        = "(#{trait.predicate_term_uri})"
        &rarr;
        - if trait.object_term
          = trait.object_term.name
          = "(#{trait.object_term_uri})"
        - elsif trait.units_term_uri
          = trait.measurement
          = trait.units_term_uri
        - else
          = trait.literal
          (literal value)

%h2= t('nodes.headers.assocs')
- if @node.assocs.published.empty?
  = t('nodes.empty_fields.assocs')
- else
  .ui.list
    - @node.assocs.published.each do |assoc|
      .item
        = assoc.predicate_term.name
        = "(#{assoc.predicate_term_uri})"
        &rarr;
        - if assoc.target_node
          = link_to(assoc.target_node.name, assoc.target_node)
        - else
          = t('nodes.empty_fields.target_node')

%h2 TODO: articles, etc...
